<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:ProMonitoringService_WPFClient.Controls"
                    xmlns:local="clr-namespace:ProMonitoringService_WPFClient.Resources">
    <Style x:Key="ComboBox_ToggleButton_DefaultStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        
                        <TextBlock VerticalAlignment="Center"
                                   FontFamily="Marlett"
                                   Text="" 
                                   HorizontalAlignment="Stretch"
                                   TextAlignment="Right"
                                   
                                   />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="AUTO" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="AUTO" />
                        </Grid.RowDefinitions>
                        <ContentPresenter ContentSource="Text" />
                        <ToggleButton Name="IsOpen_ToggleButton"
                                      Grid.Column="1"
                                      Style="{StaticResource ComboBox_ToggleButton_DefaultStyle}" />
                        <Popup Grid.Row="1"
                               Grid.ColumnSpan="2"
                               AllowsTransparency="True"
                               IsOpen="{Binding IsChecked,
                                                ElementName=IsOpen_ToggleButton,
                                                Mode=OneWay}"
                               PopupAnimation="Fade"
                               StaysOpen="False">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="5">
                                <StackPanel IsItemsHost="True" />
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectedIndex" Value="-1">
                            <Setter Property="Text" Value="none selected" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PopupedContentControl_DefaultStyle" TargetType="{x:Type controls:PopupedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PopupedContentControl">
                    <Grid Name="Root_Grid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="AUTO" />
                        </Grid.RowDefinitions>
                        <Border Name="ContentHost_Border"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="4"
                                Padding="2">
                            <ContentPresenter Name="ContentPresenter" />
                        </Border>
                        <Popup Name="Popup"
                               Grid.Row="1"
                               AllowsTransparency="True"
                               IsOpen="{Binding IsMouseOver,
                                                ElementName=Root_Grid,
                                                Mode=OneWay}"
                               PlacementTarget="{Binding ElementName=ContentPresenter}"
                               PopupAnimation="Fade"
                               StaysOpen="True">
                            <Border HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="White"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    CornerRadius="10"
                                    Padding="5"
                                    TextBlock.FontSize="14">
                                <ContentControl Background="{TemplateBinding Background}" Content="{Binding PopupContent, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="controls:PopupedContentControl.IsForACLView" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ContentHost_Border" Property="BorderBrush" Value="Black" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Border_DefaultStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Padding" Value="3" />
    </Style>
    <Style x:Key="Button_Page_Selector" TargetType="{x:Type Button}">
        
    </Style>
    <Style x:Key="Button_DefaultStyle" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            Style="{StaticResource Border_DefaultStyle}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        
    </Style>
    <Style x:Key="ToggleButton_PageSelector_Left" TargetType="ToggleButton">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="#dfdfdf"/>
                <Setter Property="Foreground" Value="#000000"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#FAFAFB" />
        <Setter Property="BorderBrush" Value="#EAEAEB" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Width="30"
                            Height="30"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="7,0,0,7">
                        <ContentPresenter
                    HorizontalAlignment="Center"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextBlock.FontWeight="Bold"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#979797"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleButton_PageSelector_Right" TargetType="ToggleButton">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="#dfdfdf"/>
                <Setter Property="Foreground" Value="#000000"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#FAFAFB" />
        <Setter Property="BorderBrush" Value="#EAEAEB" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Width="30"
                            Height="30"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="0,7,7,0">
                        <ContentPresenter
                    HorizontalAlignment="Center"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextBlock.FontWeight="Bold"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#979797"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleButton_PageSelector" TargetType="ToggleButton">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="#dfdfdf"/>
                <Setter Property="Foreground" Value="#000000"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#FAFAFB" />
        <Setter Property="BorderBrush" Value="#EAEAEB" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Width="30"
                            Height="30"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            >
                        <ContentPresenter
                    HorizontalAlignment="Center"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextBlock.FontWeight="Bold"/>
                        
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#979797"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleButton_DefaultStyle" TargetType="ToggleButton">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#FAFAFB" />
        <Setter Property="BorderBrush" Value="#EAEAEB" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Width="40"
                            Height="20"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10">
                        <Canvas>
                            <Ellipse x:Name="ellipse"
                                     Canvas.Left="0"
                                     Width="20"
                                     Height="20"
                                     Fill="White"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="0.3">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Ellipse.RenderTransform>
                                <Ellipse.BitmapEffect>
                                    <DropShadowBitmapEffect Direction="270"
                                                            ShadowDepth="0.7"
                                                            Softness="0.1"
                                                            Color="#BBBBBB" />
                                </Ellipse.BitmapEffect>
                            </Ellipse>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        To="#8ee297" />
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetProperty="BorderBrush.Color"
                                                        To="#41C955" />
                                        <DoubleAnimation Duration="00:00:0.4"
                                                         Storyboard.TargetName="ellipse"
                                                         Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)"
                                                         To="20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        To="#FAFAFB" />
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetProperty="BorderBrush.Color"
                                                        To="#EAEAEB" />
                                        <DoubleAnimation Duration="00:00:0.4"
                                                         Storyboard.TargetName="ellipse"
                                                         Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>